-- Tabla de Talleres --
CREATE TABLE talleres (
    ID_TALLER BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,        
    NOM_TALLER VARCHAR(15),                 
    DIRECCION_TALLER VARCHAR(100),          
    COMUNA_TALLER VARCHAR(25),              
    CIUDAD_TALLER VARCHAR(25),              
    PAIS_TALLER VARCHAR(15),                
    CONTACTO_TALLER VARCHAR(20),            
    EMAIL_TALLER VARCHAR(25),               
    CAPT_VEHICULOS INT,                     
    FECHA_TALLER DATE DEFAULT CURRENT_DATE,      
    ESTADO_TALLER VARCHAR(10),              
    GERENTE_TALLER VARCHAR(15)              
);

-- Tabla de Usuarios
CREATE TABLE usuarios (
    ID_USUARIO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    EMAIL_USUARIO VARCHAR(25) UNIQUE NOT NULL,
    PASSWORD_USUARIO VARCHAR(20) NOT NULL,
    NOM_USUARIO VARCHAR(30) NOT NULL,
    APEP_USUARIO VARCHAR(30),
    APEM_USUARIO VARCHAR(30),
    CONTAC_USUARIO VARCHAR(15),
    F_INGRESO_USUARIO VARCHAR(11),
    ESTADO_USUARIO VARCHAR(10),
    ID_TALLER BIGINT,
    FOREIGN KEY (ID_TALLER) REFERENCES talleres (ID_TALLER)
);


-- Tabla de Modulo
CREATE TABLE Modulo (
    id_modulo SERIAL PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL                                 
);

-- Tabla de SubModulo
CREATE TABLE SubModulo (
    id_submodulo SERIAL PRIMARY KEY,
    id_modulo INT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_modulo) REFERENCES Modulo(id_modulo)
);

-- Tabla de Seccion
CREATE TABLE Seccion (
    id_seccion SERIAL PRIMARY KEY,
    id_submodulo INT NOT NULL,
    nombre VARCHAR(100) NOT NULL,
    FOREIGN KEY (id_submodulo) REFERENCES SubModulo(id_submodulo)
);

-- Tabla de Permisos
CREATE TABLE Permisos (
    id_permiso SERIAL PRIMARY KEY,
    descripcion VARCHAR(255) NOT NULL
);

-- Tabla de SecUser (Asociación entre Usuario y Seccion)
CREATE TABLE SecUser (
    id_usuario BIGINT NOT NULL,
    id_seccion INT NOT NULL,
    PRIMARY KEY (id_usuario, id_seccion),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_seccion) REFERENCES Seccion(id_seccion)
);

-- Tabla de SecPerm (Asociación entre Permisos y Seccion)
CREATE TABLE SecPerm (
    id_seccion INT NOT NULL,
    id_permiso INT NOT NULL,
    PRIMARY KEY (id_seccion, id_permiso),
    FOREIGN KEY (id_seccion) REFERENCES Seccion(id_seccion),
    FOREIGN KEY (id_permiso) REFERENCES Permisos(id_permiso)
);

-- Tabla de ViewUser (Vista personalizada para el Frontend)
CREATE TABLE ViewUser (
    id_usuario BIGINT NOT NULL,
    id_modulo INT NOT NULL,
    id_submodulo INT NOT NULL,
    PRIMARY KEY (id_usuario, id_modulo, id_submodulo),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_modulo) REFERENCES Modulo(id_modulo),
    FOREIGN KEY (id_submodulo) REFERENCES SubModulo(id_submodulo)
);

-- Tabla de BanPer (Asociación personalizada entre Usuario y Permisos)
CREATE TABLE BanPer (
    id_usuario BIGINT NOT NULL,
    id_permiso INT NOT NULL,
    PRIMARY KEY (id_usuario, id_permiso),
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id_usuario),
    FOREIGN KEY (id_permiso) REFERENCES Permisos(id_permiso)
);

-- Tabla de sucursales --
CREATE TABLE sucursales (
    ID_SUCURAL BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NOM_SUCURSAL VARCHAR (50),
    DIRECION_SUCURSAL VARCHAR (100),
    COMUNA_SUCURSAL VARCHAR (25),
    CIUDAD_SUCURSAL VARCHAR (25),
    PAIS_SUCURSAL VARCHAR (15),
    TEL_SUCURSA VARCHAR (15),
    EMAIL_SUCURSAL VARCHAR (100),
    CAP_VEHICULOS_SUCURSAL INT,
    FECHA_SUCURSAL DATE DEFAULT CURRENT_DATE,
    ID_TALLER BIGINT,
    FOREIGN KEY (ID_TALLER) REFERENCES talleres (ID_TALLER)
);

-- Tabla de Clientes --
CREATE TABLE clientes (
    ID_CLIENTE BIGINT GENERATED ALWAYS AS IDENTITY,
    RUT_CLIENTE VARCHAR (10) UNIQUE,
    TIPO_CLIENTE VARCHAR (20),
    NOM_CLIENTE VARCHAR (100),
    TELMOVIL_CLIENTE VARCHAR (15),
    TELFIJO_CLIENTE VARCHAR (15),
    DIRECCION_CLIENTE VARCHAR (100),
    COMUNA_CLIENTE VARCHAR (25),
    CIUDAD_CLIENTE VARCHAR (25),
    PAIS_CLIENTE VARCHAR (15),
    EMAIL_CLIENTE VARCHAR (100), 
    ID_SUCURSAL BIGINT,
	UNIQUE (ID_CLIENTE),
    PRIMARY KEY (ID_CLIENTE, RUT_CLIENTE),
    FOREIGN KEY (ID_SUCURSAL) REFERENCES sucursales (ID_SUCURAL)
);

-- Tabla tipo de vehículos --
CREATE TABLE tipo_vehiculos (
    ID_TIPOVEHICULO BIGINT GENERATED ALWAYS AS IDENTITY,
    NOM_TIPOVEHICULO VARCHAR (20),
    DESCRIPCION_TIPOVEHICULO VARCHAR (100),
    PRIMARY KEY (ID_TIPOVEHICULO)
);

-- Tabla de Vehículos --
CREATE TABLE vehiculos (
    ID_VEHICULO BIGINT GENERATED ALWAYS AS IDENTITY,
    PATENTE_VEHICULO VARCHAR (6) UNIQUE,
    MARCA_VEHICULO VARCHAR (20),
    MODELO_VEHICULO VARCHAR (20),
    ANO_VEHICULO  INT,
    COLOR_VEHICULO VARCHAR (20),
    KILOMETRAJE_VEHICULO INT,
    MOTOR_VEHICULO VARCHAR (20),
    FECHA_VEHICULO DATE DEFAULT CURRENT_DATE,
    OBSERVACION_VEHICULO VARCHAR (100),
    ID_CLIENTE BIGINT,
	UNIQUE (ID_VEHICULO),
    PRIMARY KEY (ID_VEHICULO, PATENTE_VEHICULO),
    FOREIGN KEY (ID_CLIENTE) REFERENCES clientes (ID_CLIENTE)
);

CREATE TABLE presupuesto_especifico (
    ID_PESP BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DOC_PESP VARCHAR(255),  --enlace a documento
    FIRMA_CLIENT_PESP VARCHAR(255),  --enlace a firma del cliente
    D_ECONOMICOS_PESP INT  
);


CREATE TABLE presupuesto_general (
    ID_PGEN BIGINT GENERATED ALWAYS AS IDENTITY,
    DATE_PGEN VARCHAR(10),
    ID_PESP BIGINT,
    RUT_CLIENTE VARCHAR(10),
    PLACA_VEHICULO VARCHAR(10),
    VALIDEZ_PGEN INT,
    OBS_PGEN VARCHAR(150),
    ID_SUCURSAL BIGINT,
    PRIMARY KEY (ID_PGEN, DATE_PGEN),
    FOREIGN KEY (ID_PESP) REFERENCES presupuesto_especifico (ID_PESP),
    FOREIGN KEY (RUT_CLIENTE) REFERENCES clientes(RUT_CLIENTE),
    FOREIGN KEY (PLACA_VEHICULO) REFERENCES vehiculos(PATENTE_VEHICULO),
    FOREIGN KEY (ID_SUCURSAL) REFERENCES sucursales(ID_SUCURAL)
);

CREATE TABLE cobros (
    ID_COBRO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ID_PESP BIGINT,
    IMPORTE_COBRO INT,
    FPAGO_COBRO VARCHAR(15),
    DATE_COBRO VARCHAR(10),
    OBS_COBRO VARCHAR(50),
    FOREIGN KEY (ID_PESP) REFERENCES presupuesto_especifico(ID_PESP)
);

CREATE TABLE proceso_piezas (
    ID_PRO_PIEZAS BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DESCRIPCION_PRO VARCHAR(20)
);

CREATE TABLE pieza_presupuestada (
    ID_PIEZAP BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ID_PRO_PIEZAS BIGINT,
    ID_PESP BIGINT,
    NAME_PIEZAP VARCHAR(50),
    PRECIO_PIEZAP INT,
    FOREIGN KEY (ID_PRO_PIEZAS) REFERENCES proceso_piezas(ID_PRO_PIEZAS),
    FOREIGN KEY (ID_PESP) REFERENCES presupuesto_especifico(ID_PESP)
);

CREATE TABLE recepcion_activa (
    ID_RE_AC BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DESC_RA VARCHAR(200),
    FIRMA VARCHAR(200)
);

CREATE TABLE orden_ingreso (
    ID_OINGRESO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ID_RE_AC BIGINT,
    LLAVE_INGRESO BOOLEAN,
    PERMISO_INGRESO BOOLEAN,
    REVI_INGRESO BOOLEAN,
    SO_INGRESO BOOLEAN,
    EXTING_INGRESO BOOLEAN,
    BOTIQUIN_INGRESO BOOLEAN,
    TRI_INGRESO BOOLEAN,
    RR_INGRESO BOOLEAN,
    GATA_INGRESO BOOLEAN,
    BARR_INGRESO BOOLEAN,
    DS_INGRESO BOOLEAN,
    HERR_INGRESO BOOLEAN,
    ENCE_INGRESO BOOLEAN,
    PAR_INGRESO BOOLEAN,
    LLANTAS_INGRESO BOOLEAN,
    TR_INGRESO BOOLEAN,
    ESP_EX_INGRESO BOOLEAN,
    ESP_IN_INGRESO BOOLEAN,
    PLUMILLAS_INGRESO BOOLEAN,
    PISOS_INGRESO BOOLEAN,
    TAG_INGRESO BOOLEAN,
    RADIO_INGRESO BOOLEAN,
    PR_INGRESO BOOLEAN,
    AV_L_INGRESO BOOLEAN,
    CC_INGRESO BOOLEAN,
    ESP_EL_INGRESO BOOLEAN,
    ANTENA_INGRESO BOOLEAN,
    ALARMA_INGRESO BOOLEAN,
    AC_INGRESO BOOLEAN,
    PARABRISAS_INGRESO BOOLEAN,
    LP_INGRESO BOOLEAN,
    LUCES_B_INGRESO BOOLEAN,
    LUCES_A_INGRESO BOOLEAN,
    LUCES_T_INGRESO BOOLEAN,
    LUCES_E_INGRESO BOOLEAN,
    CAM_INGRESO BOOLEAN,
    OBS_INGRESO VARCHAR(150),
    NC_INGRESO VARCHAR(15),
    FOREIGN KEY (ID_RE_AC) REFERENCES recepcion_activa(ID_RE_AC)
);



CREATE TABLE cambio_registrado (
    ID_CAMBIO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DATE_CAMBIO DATE DEFAULT CURRENT_DATE,
    ID_USUARIO BIGINT,
    FOREIGN KEY (ID_USUARIO) REFERENCES usuarios(ID_USUARIO)
);

CREATE TABLE historial_cambio_orden_ingreso (
    ID_OINGRESO BIGINT,
    DATE_CREACION_OI DATE DEFAULT CURRENT_DATE,
    ID_CAMBIO BIGINT,
    PRIMARY KEY (ID_OINGRESO, DATE_CREACION_OI),
    FOREIGN KEY (ID_OINGRESO) REFERENCES orden_ingreso(ID_OINGRESO),
    FOREIGN KEY (ID_CAMBIO) REFERENCES cambio_registrado(ID_CAMBIO)
);

CREATE TABLE orden_trabajo (
    ID_OTRABAJO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    CANT_PIEZAS_OT INT,
    COMI_DESAB INT,
    ID_OINGRESO BIGINT,
    FOREIGN KEY (ID_OINGRESO) REFERENCES orden_ingreso(ID_OINGRESO)
);


CREATE TABLE historial_cambio_orden_trabajo (
    ID_OTRABAJO BIGINT,
    DATE_CREACION_OT DATE DEFAULT CURRENT_DATE,
    ID_CAMBIO BIGINT,
    PRIMARY KEY (ID_OTRABAJO, DATE_CREACION_OT),
    FOREIGN KEY (ID_OTRABAJO) REFERENCES orden_trabajo(ID_OTRABAJO),
    FOREIGN KEY (ID_CAMBIO) REFERENCES cambio_registrado(ID_CAMBIO)
);

CREATE TABLE estado_trabajador (
    ID_EST_T BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DESCRIPCION VARCHAR(20)
);

CREATE TABLE tipo_cargo (
    ID_TIPO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    NOMB_C VARCHAR(50)
);

CREATE TABLE cargo (
    ID_CARGO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ID_TIPO BIGINT,
    FOREIGN KEY (ID_TIPO) REFERENCES tipo_cargo(ID_TIPO)
);

CREATE TABLE empleado (
    ID_EMPLEADO BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    RUT_EMPLEADO VARCHAR(10),
    NOM_EMPLEADO VARCHAR(100),
    DIREC_EMPLEADO VARCHAR(100),
    COM_EMPLEADO VARCHAR(25),
    CIUD_EMPLEADO VARCHAR(25),
    NACIO_EMPLEADO VARCHAR(15),
    DATE_NACIMIENTO DATE,
    ESTCIVIL_EMPLEADO VARCHAR(15),
    ID_CARGO BIGINT,
    GS_EMPLEADO VARCHAR(20),
    TEL_EMPLEADO VARCHAR(15),
    TEL_EMERGENCIA_EM VARCHAR(15),
    PREV_EMPLEADO VARCHAR(20),
    AFP_EMPLEADO VARCHAR(20),
    CONTR_EMPLEADO VARCHAR(15),
    EMAIL_EMPLEADO VARCHAR(100),
    OBS_EMPLEADO VARCHAR(150),
    ID_EST_T BIGINT,
    FOREIGN KEY (ID_EST_T) REFERENCES estado_trabajador(ID_EST_T),
    FOREIGN KEY (ID_CARGO) REFERENCES cargo(ID_CARGO)
);


CREATE TABLE insumos (
    ID_INSUMOS BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    DESCRIPCION VARCHAR(20),
    FORMATO VARCHAR(20),
    CADUCIDAD DATE,
    PRECIO INT,
    STOCK_MIN INT,
    STOCK_MAX INT,
    STOCK_CRI INT
);

CREATE TABLE detalle_orden_trabajo (
    ID_DET_OT BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ID_EMPLEADO BIGINT,
    ID_OTRABAJO BIGINT,
    MOBRA_DET_OT INT,
    FOREIGN KEY (ID_EMPLEADO) REFERENCES empleado(ID_EMPLEADO),  
    FOREIGN KEY (ID_OTRABAJO) REFERENCES orden_trabajo(ID_OTRABAJO)
);

CREATE TABLE consumo_insumos_ot (
    ID_DET_OT BIGINT,
    ID_INSUMOS BIGINT,
    CANTIDAD INT,
    PRIMARY KEY (ID_DET_OT, ID_INSUMOS),
    FOREIGN KEY (ID_DET_OT) REFERENCES detalle_orden_trabajo(ID_DET_OT),
    FOREIGN KEY (ID_INSUMOS) REFERENCES insumos(ID_INSUMOS)
);

-- Inserción de datos de prueba --
INSERT INTO talleres (NOM_TALLER, DIRECCION_TALLER, COMUNA_TALLER, CIUDAD_TALLER, PAIS_TALLER, CONTACTO_TALLER, EMAIL_TALLER, CAPT_VEHICULOS, ESTADO_TALLER, GERENTE_TALLER)
VALUES ('AutoFix', 'Avenida Principal 123', 'Centro', 'Santiago', 'Chile', '+56987654321', 'contacto@autofix.cl', 50, 'Activo', 'Juan Pérez');

INSERT INTO talleres (NOM_TALLER, DIRECCION_TALLER, COMUNA_TALLER, CIUDAD_TALLER, PAIS_TALLER, CONTACTO_TALLER, EMAIL_TALLER, CAPT_VEHICULOS, ESTADO_TALLER, GERENTE_TALLER)
VALUES ('CarCare', 'Calle Los Olivos 456', 'Providencia', 'Santiago', 'Chile', '+56912345678', 'info@carcare.cl', 30, 'Activo', 'María González');

INSERT INTO talleres (NOM_TALLER, DIRECCION_TALLER, COMUNA_TALLER, CIUDAD_TALLER, PAIS_TALLER, CONTACTO_TALLER, EMAIL_TALLER, CAPT_VEHICULOS, ESTADO_TALLER, GERENTE_TALLER)
VALUES ('FixMoto', 'Avenida Las Condes 789', 'Las Condes', 'Santiago', 'Chile', '+56998765432', 'servicio@fixmoto.cl', 20, 'Inactivo', 'Carlos Ramírez');

-- Inserción de datos de prueba --
INSERT INTO sucursales (NOM_SUCURSAL, DIRECION_SUCURSAL, COMUNA_SUCURSAL, CIUDAD_SUCURSAL, PAIS_SUCURSAL, TEL_SUCURSA, EMAIL_SUCURSAL, CAP_VEHICULOS_SUCURSAL, ID_TALLER)
VALUES ('Sucursal Central', 'Avenida Principal 456', 'Centro', 'Santiago', 'Chile', '+56987654321', 'sucursalcentral@autofix.cl', 40, 1);

INSERT INTO sucursales (NOM_SUCURSAL, DIRECION_SUCURSAL, COMUNA_SUCURSAL, CIUDAD_SUCURSAL, PAIS_SUCURSAL, TEL_SUCURSA, EMAIL_SUCURSAL, CAP_VEHICULOS_SUCURSAL, ID_TALLER)
VALUES ('Sucursal Los Olivos', 'Calle Los Olivos 789', 'Providencia', 'Santiago', 'Chile', '+56912345678', 'losolivos@carcare.cl', 30, 2);

INSERT INTO sucursales (NOM_SUCURSAL, DIRECION_SUCURSAL, COMUNA_SUCURSAL, CIUDAD_SUCURSAL, PAIS_SUCURSAL, TEL_SUCURSA, EMAIL_SUCURSAL, CAP_VEHICULOS_SUCURSAL, ID_TALLER)
VALUES ('Sucursal Las Condes', 'Avenida Las Condes 1010', 'Las Condes', 'Santiago', 'Chile', '+56998765432', 'lascondes@fixmoto.cl', 25, 3);

/*
DROP TABLE IF EXISTS consumo_insumos_ot CASCADE;
DROP TABLE IF EXISTS detalle_orden_trabajo CASCADE;
DROP TABLE IF EXISTS insumos CASCADE;
DROP TABLE IF EXISTS empleado CASCADE;
DROP TABLE IF EXISTS cargo CASCADE;
DROP TABLE IF EXISTS tipo_cargo CASCADE;
DROP TABLE IF EXISTS estado_trabajador CASCADE;
DROP TABLE IF EXISTS historial_cambio_orden_trabajo CASCADE;
DROP TABLE IF EXISTS orden_trabajo CASCADE;
DROP TABLE IF EXISTS historial_cambio_orden_ingreso CASCADE;
DROP TABLE IF EXISTS cambio_registrado CASCADE;
DROP TABLE IF EXISTS orden_ingreso CASCADE;
DROP TABLE IF EXISTS recepcion_activa CASCADE;
DROP TABLE IF EXISTS pieza_presupuestada CASCADE;
DROP TABLE IF EXISTS proceso_piezas CASCADE;
DROP TABLE IF EXISTS cobros CASCADE;
DROP TABLE IF EXISTS presupuesto_general CASCADE;
DROP TABLE IF EXISTS presupuesto_especifico CASCADE;
DROP TABLE IF EXISTS vehiculos CASCADE;
DROP TABLE IF EXISTS tipo_vehiculos CASCADE;
DROP TABLE IF EXISTS clientes CASCADE;
DROP TABLE IF EXISTS sucursales CASCADE;
DROP TABLE IF EXISTS usuario_modulo CASCADE;
DROP TABLE IF EXISTS modulo_permiso CASCADE;
DROP TABLE IF EXISTS usuarios CASCADE;
DROP TABLE IF EXISTS rol_permiso CASCADE;
DROP TABLE IF EXISTS permisos CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS modulos CASCADE;
DROP TABLE IF EXISTS talleres CASCADE;


*/

INSERT INTO modulo (nombre) VALUES ('GESTION');

INSERT INTO SUBMODULO (ID_MODULO,NOMBRE) VALUES (1,'CLIENTES');
INSERT INTO SECCION (ID_SUBMODULO, NOMBRE)
VALUES (1,'NUEVO CLIENTE'),(1,'LISTA DE CLIENTES'),(1,'MANEJO DE CLIENTES');
INSERT INTO PERMISOS (DESCRIPCION) 
VALUES ('CREAR CLIENTE'),('CREAR VEHICULO'),('BUSCAR CLIENTE POR NOMBRE'),('BUSCAR CLIENTE POR EMAIL'),('BUSCAR CLIENTE POR RUT'),
('MOSTRAR ULTIMOS 10 CLIENTES'), ('MOSTRAR TODOS LOS CLIENTES'),('FILTRAR POR TIPO DE CLIENTE '),('FILTRAR POR PAIS DEL CLIENTE'),
('FILTRAR POR CIUDAD DEL CLIENTE'),('BUSCAR CLIENTE POR TELMOVIL'),('BUSCAR CLIENTE POR TELFIJO');

INSERT INTO SECPERM VALUES (1,1),(1,2),(2,3),(2,4),(2,5),(2,6),(2,7),(2,8),(2,9),(2,10),(2,11),(2,12),(3,7);

INSERT INTO SUBMODULO (ID_MODULO,NOMBRE) VALUES (1,'VEHICULOS');
INSERT INTO SECCION (ID_SUBMODULO,NOMBRE)
VALUES (2,'NUEVO VEHICULO'), (2,'LISTA DE VEHICULOS');
INSERT INTO PERMISOS (DESCRIPCION)
VALUES ('MOSTRAR ULTIMOS 10 VEHICULOS'),('BUCSAR VEHICULO POR PLACA'),('BUCSAR VEHICULO POR RUT DEL CLIENTE'),
('FILTRAR POR KILOMETRAJE DEL VEHICULO'),('FILTRAR POR MARCA DEL VEHICULO'),('FILTRAR POR MODELO DEL VEHICULO'),
('FILTRAR POR AÑO DEL VEHICULO'),('MOSTRAR TODOS LOS VEHICULOS');

INSERT INTO SECPERM VALUES (4,2),(4,3),(4,5),(5,13),(5,20),(5,14),(5,15),(5,16),(5,17),(5,18),(5,19);